package com.hcm.controller;

import java.time.LocalDate;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.hcm.entity.Claim;
import com.hcm.entity.ClaimType;
import com.hcm.entity.Member;
import com.hcm.serviceImpl.ClaimServiceImpl;

@CrossOrigin
@RestController
@RequestMapping("/api/v1/hcm/claim")
public class ClaimController {

	@Autowired
	ClaimServiceImpl claimServiceImpl;

	@RequestMapping("/member/{memberId}/type/{type}/amount/{amount}/remarks/{remarks}")
	public Claim submitClaim(@PathVariable("memberId") Long memberId, @PathVariable("type") String type,
			@PathVariable("amount") float amount, @PathVariable("remarks") String remarks) {
		Claim claim = new Claim();
		Member member = new Member();
		member.setId(memberId);
		claim.setMember(member);
		switch (type) {
		case "Vision":
			claim.setType(ClaimType.Vision);
			break;
		case "Dental":
			claim.setType(ClaimType.Dental);
			break;
		case "Medical":
			claim.setType(ClaimType.Medical);
			break;
		default:
			break;
		}

		claim.setAmount(amount);
		claim.setRemarks(remarks);
		LocalDate claimDate = LocalDate.now();
		claim.setClaimDate(claimDate);
		Claim submittedClaim = claimServiceImpl.addClaim(claim);
		if (null != submittedClaim) {
			return submittedClaim;
		} else {
			return null;
		}

	}
	
//	@RequestMapping("/member/{memberId}")
//	public Set<Claim> getClaimsOfMember(@PathVariable("memberId") Long memberId){
//		Member member = new Member();
//		member.setId(memberId);
//		Set<Claim> claimsOfmember = claimServiceImpl.getClaimsOfMember(member);		
//		return claimsOfmember;
//		
//	}
	
	@RequestMapping("/member/{memberId}")
	public ResponseEntity<?>  getClaimsOfMember(@PathVariable("memberId") Long memberId){
		Member member = new Member();
		member.setId(memberId);
		Set<Claim> claimsOfmember = claimServiceImpl.getClaimsOfMember(member);		
		return ResponseEntity.ok(claimsOfmember);
		
	}

}
